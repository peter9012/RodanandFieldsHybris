DECLARE @AccountID BIGINT

SET @ACCOUNTID=6813027


--Return Notes -- In RFL - If notes are not present , there is no row in ReturnNotes table. On Hybris side - a row is created in ReturnRequest table anyway.
SELECT P_RFACCOUNTID , P_RETURNORDER  , RF_RET_NOTES_CNT , HYB_RET_NOTES_CNT FROM
(SELECT 
COUNT(*) RF_RET_NOTES_CNT, RO.RETURNORDERID,AB.ACCOUNTID
FROM 
RFOPERATIONS.HYBRIS.RETURNNOTES RN,
RFOPERATIONS.HYBRIS.RETURNORDER RO,
RFOPERATIONS.HYBRIS.ORDERS O,
RFOPERATIONS.RFO_ACCOUNTS.ACCOUNTBASE AB WHERE
AB.ACCOUNTID=O.ACCOUNTID AND O.ORDERID=RO.ORDERID AND AB.ACCOUNTID=@AccountID AND
RO.RETURNORDERID=RN.RETURNORDERID AND AB.COUNTRYID=236 AND
AB.ACCOUNTID IN (SELECT P_RFACCOUNTID FROM HYBRIS.DBO.USERS WHERE P_SOURCENAME='Hybris-DM') AND
O.ORDERID IN (SELECT ORDERID FROM RFOPERATIONS.ETL.ORDERDATE WHERE STARTDATE>'2014-05-01 00:00:00.00')
GROUP BY RO.RETURNORDERID,AB.ACCOUNTID) RF,
(SELECT COUNT(*) HYB_RET_NOTES_CNT, U.P_RFACCOUNTID, RR.P_RETURNORDER FROM
HYBRIS.DBO.USERS U,
HYBRIS.DBO.RETURNREQUEST RR,
HYBRIS.DBO.ORDERS O
WHERE
U.P_SOURCENAME='Hybris-DM' AND 
U.P_RFACCOUNTID=CAST(@AccountID AS NVARCHAR) AND
U.PK=O.USERPK AND
O.PK=RR.P_ORDER
GROUP BY U.P_RFACCOUNTID, RR.P_RETURNORDER) HYB
WHERE
RF.ACCOUNTID=HYB.P_RFACCOUNTID 
AND RF.RETURNORDERID=HYB.P_RETURNORDER

